version: "2.2"

services:
  redis:
    image: redis
    restart: always
    env_file: ./.env
  worker:
    restart: always
    build: .
    volumes:
      - .:/online_course
    command: ["celery", "-A", "online_course", "worker"]
    env_file: ./.env
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy

  flower:
    restart: always
    build: .
    ports:
      - "5555:5555"
    command: [ "celery", "-A", "online_course", "flower" ]
    volumes:
      - .:/online_course
    env_file: ./.env
    depends_on:
      redis:
        condition: service_started
      worker:
        condition: service_started

  web:
    restart: always
    build: .
    command: ["./run.bash"]
    volumes:
      - .:/online_course
    ports:
      - "8000:8000"
    env_file: ./.env
    depends_on:
      db:
        condition: service_healthy
      worker:
        condition: service_started
  db:
    restart: always
    image: postgres
    ports:
      - '5432'
    volumes:
      - postgresqldbvolume:/var/lib/postgresql/data
    env_file: ./.env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgresqldbvolume:
    driver: local